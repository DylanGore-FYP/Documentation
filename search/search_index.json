{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DylanGore-FYP Info Documentation is in the process being updated. Please chose the required section from the menu on the left side of the page to get started.","title":"Home"},{"location":"#dylangore-fyp","text":"Info Documentation is in the process being updated. Please chose the required section from the menu on the left side of the page to get started.","title":"DylanGore-FYP"},{"location":"about/","text":"About","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"setup/cloud-single-server/","text":"Cloud - Single Server Setup Warning This section of the documentation is incomplete! Results may vary. Requirements 1 Virtual Machine/Bare-metal server Ansible Setup Download the Playbook from GitHub This can either be done by cloning the Git repository or downloading it as a zip file. Clone the Repository git clone https://github.com/DylanGore-FYP/ansible-playbook-docker-compose-deploy.git Direct Download wget https://github.com/DylanGore-FYP/ansible-playbook-docker-compose-deploy/archive/refs/heads/main.zip Unzip the file: unzip main.zip Add the Firebase Admin Credentials File If you have already setup Firebase, you should have a serviceAccountKey.json file if not, you should setup Firebase before continuing. Setup Firebase Once you have a serviceAccountKey.json file, place it in the Playbook templates/ directory. Variable Configuration Coming Soon! Running the Playbook Coming Soon! Manual Setup Info This guide is based of the use of Ubuntu 20.04 as the operating system. Initial Server Setup Update the server sudo apt update sudo apt upgrade Install Docker Install Docker using the official installation guide . Don't forget to follow the post-installation steps to create the Docker group and enable it to start on boot. Install docker-compose Below are the required parts of the docker-compose installation guide. The full guide is available here . Download the latest stable version of docker-compose : sudo curl -L \"https://github.com/docker/compose/releases/download/1.28.6/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose Make it executable: sudo chmod +x /usr/local/bin/docker-compose Optionally, you can enable command completion for docker-compose by following the guide here .","title":"Single Server Setup"},{"location":"setup/cloud-single-server/#cloud-single-server-setup","text":"Warning This section of the documentation is incomplete! Results may vary.","title":"Cloud - Single Server Setup"},{"location":"setup/cloud-single-server/#requirements","text":"1 Virtual Machine/Bare-metal server","title":"Requirements"},{"location":"setup/cloud-single-server/#ansible-setup","text":"","title":"Ansible Setup"},{"location":"setup/cloud-single-server/#download-the-playbook-from-github","text":"This can either be done by cloning the Git repository or downloading it as a zip file.","title":"Download the Playbook from GitHub"},{"location":"setup/cloud-single-server/#clone-the-repository","text":"git clone https://github.com/DylanGore-FYP/ansible-playbook-docker-compose-deploy.git","title":"Clone the Repository"},{"location":"setup/cloud-single-server/#direct-download","text":"wget https://github.com/DylanGore-FYP/ansible-playbook-docker-compose-deploy/archive/refs/heads/main.zip Unzip the file: unzip main.zip","title":"Direct Download"},{"location":"setup/cloud-single-server/#add-the-firebase-admin-credentials-file","text":"If you have already setup Firebase, you should have a serviceAccountKey.json file if not, you should setup Firebase before continuing. Setup Firebase Once you have a serviceAccountKey.json file, place it in the Playbook templates/ directory.","title":"Add the Firebase Admin Credentials File"},{"location":"setup/cloud-single-server/#variable-configuration","text":"Coming Soon!","title":"Variable Configuration"},{"location":"setup/cloud-single-server/#running-the-playbook","text":"Coming Soon!","title":"Running the Playbook"},{"location":"setup/cloud-single-server/#manual-setup","text":"Info This guide is based of the use of Ubuntu 20.04 as the operating system.","title":"Manual Setup"},{"location":"setup/cloud-single-server/#initial-server-setup","text":"Update the server sudo apt update sudo apt upgrade","title":"Initial Server Setup"},{"location":"setup/cloud-single-server/#install-docker","text":"Install Docker using the official installation guide . Don't forget to follow the post-installation steps to create the Docker group and enable it to start on boot.","title":"Install Docker"},{"location":"setup/cloud-single-server/#install-docker-compose","text":"Below are the required parts of the docker-compose installation guide. The full guide is available here . Download the latest stable version of docker-compose : sudo curl -L \"https://github.com/docker/compose/releases/download/1.28.6/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose Make it executable: sudo chmod +x /usr/local/bin/docker-compose Optionally, you can enable command completion for docker-compose by following the guide here .","title":"Install docker-compose"},{"location":"setup/external-firebase-authentication/","text":"Firebase Authentication What is Firebase? Both the Dashboard and API use Google's Firebase service as an authentication backend. Firebase provides a number of features but in this case the only one being used is Firebase Authentication . Firebase Authentication allows for multiple login providers including standard e-mail address & password logins as well as Google, Microsoft, Twitter, Facebook, etc. All of this integration and account storage is handled by Firebase. Firebase can be a paid subscription service but in the case of this system, all of the features used are included in the free plan . Setting Up a Firebase Project To begin, you will need to log in to the Firebase Console with a Google Account. Once here you need to create a new project, as shown. Once your project has been created, you will be redirected to the dashboard. Adding an App You now need to create an app, this will generate a set of credentials that the Vehicles Dashboard needs to communicate with Firebase. To do this, simple click on the Web App icon (third button from the left) on the Firebase Dashboard. You will then be asked to give the app a name. Info Make sure the option for Firebase Hosting is not checked, it is not used in this setup. Once the app has been registered, the Firebase config for the app will be displayed. Take note of these values as they are required to run the Vehicle Dashboard. Warning Make sure to keep these details secure! Getting Credentials for the Vehicle API The API uses the Firebase Admin SDK to interface with Firebase to validate user tokens. It uses a service account to do this. To access the credentials for the service account, go to your Project Settings (Gear icon on the top left of the Firebase Dashboard) and Service Accounts . From here, you have the option to Generate a new private key , click the button and you will be prompted to download a file, name it serviceAccountKey.json and save it for later use. Danger Again, keep this file secure! It grants administrator access to your Firebase project. Authentication Providers Firebase (and by extension the Vehicle Dashboard) supports multiple login providers, at a minimum you must enable the Email/Password login after that the choice is your as to what other providers to enable, if any. To enable authentication, go to the Authentication section of the Firebase Dashboard via the link in the sidebar. Once here, follow the on-screen instructions to complete the initial setup. After that, authentication providers can be enabled/disabled as needed via the Sign-in method tab. Email/Password & Google Login To enable either of these providers, simply select them from the list, change the switch to Enabled and click Save . Info Email link (Password-less sign-in) is not supported. Phone & Anonymous Login The Phone and Anonymous sign-in providers are not currently supported by the Vehicles Dashboard. Other Providers The instructions to enable the other providers can vary, in most cases it requires registering an app with the required provider and inputting the API key(s) into the configuration form under that provider in the Sign-in method section. The Firebase documentation contains setup instructions for each provider. Facebook Apple Twitter GitHub Microsoft Yahoo Info Please note that in the guides above you only need to follow the instructions to the point of obtaining API keys or other required credentials. Once you have those, that should be enough to add the provider to Firebase. Authorized Domains As a security measure, Firebase only allows login using third-party providers (everything excluding email/password in this case) from a list of authorized domains. Make sure to add the domain/IP address that the Vehicle Dashboard will be accessible at is added to this list. It is found below the list of sign-in providers.","title":"Firebase Authentication"},{"location":"setup/external-firebase-authentication/#firebase-authentication","text":"","title":"Firebase Authentication"},{"location":"setup/external-firebase-authentication/#what-is-firebase","text":"Both the Dashboard and API use Google's Firebase service as an authentication backend. Firebase provides a number of features but in this case the only one being used is Firebase Authentication . Firebase Authentication allows for multiple login providers including standard e-mail address & password logins as well as Google, Microsoft, Twitter, Facebook, etc. All of this integration and account storage is handled by Firebase. Firebase can be a paid subscription service but in the case of this system, all of the features used are included in the free plan .","title":"What is Firebase?"},{"location":"setup/external-firebase-authentication/#setting-up-a-firebase-project","text":"To begin, you will need to log in to the Firebase Console with a Google Account. Once here you need to create a new project, as shown. Once your project has been created, you will be redirected to the dashboard.","title":"Setting Up a Firebase Project"},{"location":"setup/external-firebase-authentication/#adding-an-app","text":"You now need to create an app, this will generate a set of credentials that the Vehicles Dashboard needs to communicate with Firebase. To do this, simple click on the Web App icon (third button from the left) on the Firebase Dashboard. You will then be asked to give the app a name. Info Make sure the option for Firebase Hosting is not checked, it is not used in this setup. Once the app has been registered, the Firebase config for the app will be displayed. Take note of these values as they are required to run the Vehicle Dashboard. Warning Make sure to keep these details secure!","title":"Adding an App"},{"location":"setup/external-firebase-authentication/#getting-credentials-for-the-vehicle-api","text":"The API uses the Firebase Admin SDK to interface with Firebase to validate user tokens. It uses a service account to do this. To access the credentials for the service account, go to your Project Settings (Gear icon on the top left of the Firebase Dashboard) and Service Accounts . From here, you have the option to Generate a new private key , click the button and you will be prompted to download a file, name it serviceAccountKey.json and save it for later use. Danger Again, keep this file secure! It grants administrator access to your Firebase project.","title":"Getting Credentials for the Vehicle API"},{"location":"setup/external-firebase-authentication/#authentication-providers","text":"Firebase (and by extension the Vehicle Dashboard) supports multiple login providers, at a minimum you must enable the Email/Password login after that the choice is your as to what other providers to enable, if any. To enable authentication, go to the Authentication section of the Firebase Dashboard via the link in the sidebar. Once here, follow the on-screen instructions to complete the initial setup. After that, authentication providers can be enabled/disabled as needed via the Sign-in method tab.","title":"Authentication Providers"},{"location":"setup/external-firebase-authentication/#emailpassword-google-login","text":"To enable either of these providers, simply select them from the list, change the switch to Enabled and click Save . Info Email link (Password-less sign-in) is not supported.","title":"Email/Password &amp; Google Login"},{"location":"setup/external-firebase-authentication/#phone-anonymous-login","text":"The Phone and Anonymous sign-in providers are not currently supported by the Vehicles Dashboard.","title":"Phone &amp; Anonymous Login"},{"location":"setup/external-firebase-authentication/#other-providers","text":"The instructions to enable the other providers can vary, in most cases it requires registering an app with the required provider and inputting the API key(s) into the configuration form under that provider in the Sign-in method section. The Firebase documentation contains setup instructions for each provider. Facebook Apple Twitter GitHub Microsoft Yahoo Info Please note that in the guides above you only need to follow the instructions to the point of obtaining API keys or other required credentials. Once you have those, that should be enough to add the provider to Firebase.","title":"Other Providers"},{"location":"setup/external-firebase-authentication/#authorized-domains","text":"As a security measure, Firebase only allows login using third-party providers (everything excluding email/password in this case) from a list of authorized domains. Make sure to add the domain/IP address that the Vehicle Dashboard will be accessible at is added to this list. It is found below the list of sign-in providers.","title":"Authorized Domains"},{"location":"setup/vehicle/","text":"Vehicle Warning This section of the documentation is incomplete! Results may vary. Requirements Raspberry Pi Micro SD Card OBD-II Adapter LCD Display (Optional) GPS Adapter/HAT Preparing the Raspberry Pi Install the Operating System Flash an SD Card with the latest version of Raspberry Pi OS. The recommended way to do this is to use the Raspberry Pi Imager but something like balenaEtcher can be used if preferred. This guide assumes that that standard version of Raspberry Pi OS is being used (the one with the desktop environment) but feel free to use Raspberry Pi OS Lite if no display is needed. Configure Headless Operation This step is optional if using a display but makes things a bit easier to configure later. Plug the SD card into the computer and open the boot partition. Add a file called ssh (with no file extension) to enable the SSH server. Add a file called wpa_supplicant.conf to pre-configure your Wi-Fi network(s). Below is a sample file that has two networks with a different priority, if only one network is needed, remove the second network block. Don't forget to update the country with the ISO 3166-1 two letter country code for your location. c trl _i nterfa ce=DIR=/var/ru n /wpa_supplica nt GROUP= net dev upda te _co nf ig= 1 cou ntr y=IE net work= { ssid= \"Network 1\" psk= \"PASSWORD\" priori t y= 1 } net work= { ssid= \"Network 2\" psk= \"PASSWORD\" priori t y= 2 } See this guide on headless setup from the Raspberry Pi website for more information. Ansible Setup Coming soon! Manual Setup Basic Raspberry Pi Setup SSH into the Raspberry Pi. Depending on your network it may be accessible over the raspberrrypi.local hostname. If not, check the DHCP leases on the router for the IP address or scan the network using a scanning tool such as nmap . ssh pi@raspberrypi.local Default Password The default password for the pi user in Raspberry Pi OS is raspberry . Update the default password: passwd pi Update the software on the Raspberry Pi to the latest version. sudo apt update sudo apt upgrade If you need to change any basic settings (hostname, Wi-Fi, language, etc.), this can be done using raspi-config : sudo raspi-config You may need to reboot at this point. sudo reboot now Download the Code Info This is a temporary solution, the final instructions will have an easier installation method. Clone the code from GitHub using git: git clone https://github.com/DylanGore-FYP/Car.git Or, download and extract this zip file. Install pipenv This project uses pipenv to manage dependencies. To install it, run: pip3 install pipenv On Debian-based systems, pipenv can also be installed using apt : apt install pipenv Once pipenv is installed, cd into the downloaded code and run: pipenv install This will install all of the required dependencies in a virtual environment. To access the virtual environment, run: pipenv shell Note: All instructions after this point assume you are running within the virtual environment unless stated otherwise Configuration All configuration is done within a config.toml file. A sample file comes with the repo. Copy it and rename it to use it as a starting point. cp config.sample.toml config.toml","title":"Vehicle"},{"location":"setup/vehicle/#vehicle","text":"Warning This section of the documentation is incomplete! Results may vary.","title":"Vehicle"},{"location":"setup/vehicle/#requirements","text":"Raspberry Pi Micro SD Card OBD-II Adapter LCD Display (Optional) GPS Adapter/HAT","title":"Requirements"},{"location":"setup/vehicle/#preparing-the-raspberry-pi","text":"","title":"Preparing the Raspberry Pi"},{"location":"setup/vehicle/#install-the-operating-system","text":"Flash an SD Card with the latest version of Raspberry Pi OS. The recommended way to do this is to use the Raspberry Pi Imager but something like balenaEtcher can be used if preferred. This guide assumes that that standard version of Raspberry Pi OS is being used (the one with the desktop environment) but feel free to use Raspberry Pi OS Lite if no display is needed.","title":"Install the Operating System"},{"location":"setup/vehicle/#configure-headless-operation","text":"This step is optional if using a display but makes things a bit easier to configure later. Plug the SD card into the computer and open the boot partition. Add a file called ssh (with no file extension) to enable the SSH server. Add a file called wpa_supplicant.conf to pre-configure your Wi-Fi network(s). Below is a sample file that has two networks with a different priority, if only one network is needed, remove the second network block. Don't forget to update the country with the ISO 3166-1 two letter country code for your location. c trl _i nterfa ce=DIR=/var/ru n /wpa_supplica nt GROUP= net dev upda te _co nf ig= 1 cou ntr y=IE net work= { ssid= \"Network 1\" psk= \"PASSWORD\" priori t y= 1 } net work= { ssid= \"Network 2\" psk= \"PASSWORD\" priori t y= 2 } See this guide on headless setup from the Raspberry Pi website for more information.","title":"Configure Headless Operation"},{"location":"setup/vehicle/#ansible-setup","text":"Coming soon!","title":"Ansible Setup"},{"location":"setup/vehicle/#manual-setup","text":"","title":"Manual Setup"},{"location":"setup/vehicle/#basic-raspberry-pi-setup","text":"SSH into the Raspberry Pi. Depending on your network it may be accessible over the raspberrrypi.local hostname. If not, check the DHCP leases on the router for the IP address or scan the network using a scanning tool such as nmap . ssh pi@raspberrypi.local Default Password The default password for the pi user in Raspberry Pi OS is raspberry . Update the default password: passwd pi Update the software on the Raspberry Pi to the latest version. sudo apt update sudo apt upgrade If you need to change any basic settings (hostname, Wi-Fi, language, etc.), this can be done using raspi-config : sudo raspi-config You may need to reboot at this point. sudo reboot now","title":"Basic Raspberry Pi Setup"},{"location":"setup/vehicle/#download-the-code","text":"Info This is a temporary solution, the final instructions will have an easier installation method. Clone the code from GitHub using git: git clone https://github.com/DylanGore-FYP/Car.git Or, download and extract this zip file.","title":"Download the Code"},{"location":"setup/vehicle/#install-pipenv","text":"This project uses pipenv to manage dependencies. To install it, run: pip3 install pipenv On Debian-based systems, pipenv can also be installed using apt : apt install pipenv Once pipenv is installed, cd into the downloaded code and run: pipenv install This will install all of the required dependencies in a virtual environment. To access the virtual environment, run: pipenv shell Note: All instructions after this point assume you are running within the virtual environment unless stated otherwise","title":"Install pipenv"},{"location":"setup/vehicle/#configuration","text":"All configuration is done within a config.toml file. A sample file comes with the repo. Copy it and rename it to use it as a starting point. cp config.sample.toml config.toml","title":"Configuration"}]}
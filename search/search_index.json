{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DylanGore-FYP Info Documentation is in the process being updated. Please chose the required section from the menu on the left side of the page to get started.","title":"Home"},{"location":"#dylangore-fyp","text":"Info Documentation is in the process being updated. Please chose the required section from the menu on the left side of the page to get started.","title":"DylanGore-FYP"},{"location":"about/","text":"About","title":"About"},{"location":"about/#about","text":"","title":"About"},{"location":"setup/cloud-single-server/","text":"Cloud - Single Server Setup Warning This section of the documentation is incomplete! Results may vary. Requirements 1 Virtual Machine/Bare-metal server Ansible Setup Coming soon! Manual Setup Info This guide is based of the use of Ubuntu 20.04 as the operating system. Initial Server Setup Update the server sudo apt update sudo apt upgrade Install Docker Install Docker using the official installation guide . Don't forget to follow the post-installation steps to create the Docker group and enable it to start on boot. Install docker-compose Below are the required parts of the docker-compose installation guide. The full guide is available here . Download the latest stable version of docker-compose : sudo curl -L \"https://github.com/docker/compose/releases/download/1.28.6/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose Make it executable: sudo chmod +x /usr/local/bin/docker-compose Optionally, you can enable command completion for docker-compose by following the guide here .","title":"Single Server Setup"},{"location":"setup/cloud-single-server/#cloud-single-server-setup","text":"Warning This section of the documentation is incomplete! Results may vary.","title":"Cloud - Single Server Setup"},{"location":"setup/cloud-single-server/#requirements","text":"1 Virtual Machine/Bare-metal server","title":"Requirements"},{"location":"setup/cloud-single-server/#ansible-setup","text":"Coming soon!","title":"Ansible Setup"},{"location":"setup/cloud-single-server/#manual-setup","text":"Info This guide is based of the use of Ubuntu 20.04 as the operating system.","title":"Manual Setup"},{"location":"setup/cloud-single-server/#initial-server-setup","text":"Update the server sudo apt update sudo apt upgrade","title":"Initial Server Setup"},{"location":"setup/cloud-single-server/#install-docker","text":"Install Docker using the official installation guide . Don't forget to follow the post-installation steps to create the Docker group and enable it to start on boot.","title":"Install Docker"},{"location":"setup/cloud-single-server/#install-docker-compose","text":"Below are the required parts of the docker-compose installation guide. The full guide is available here . Download the latest stable version of docker-compose : sudo curl -L \"https://github.com/docker/compose/releases/download/1.28.6/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose Make it executable: sudo chmod +x /usr/local/bin/docker-compose Optionally, you can enable command completion for docker-compose by following the guide here .","title":"Install docker-compose"},{"location":"setup/vehicle/","text":"Vehicle Warning This section of the documentation is incomplete! Results may vary. Requirements Raspberry Pi Micro SD Card OBD-II Adapter LCD Display (Optional) GPS Adapter/HAT Preparing the Raspberry Pi Install the Operating System Flash an SD Card with the latest version of Raspberry Pi OS. The recommended way to do this is to use the Raspberry Pi Imager but something like balenaEtcher can be used if preferred. This guide assumes that that standard version of Raspberry Pi OS is being used (the one with the desktop environment) but feel free to use Raspberry Pi OS Lite if no display is needed. Configure Headless Operation This step is optional if using a display but makes things a bit easier to configure later. Plug the SD card into the computer and open the boot partition. Add a file called ssh (with no file extension) to enable the SSH server. Add a file called wpa_supplicant.conf to pre-configure your Wi-Fi network(s). Below is a sample file that has two networks with a different priority, if only one network is needed, remove the second network block. Don't forget to update the country with the ISO 3166-1 two letter country code for your location. c trl _i nterfa ce=DIR=/var/ru n /wpa_supplica nt GROUP= net dev upda te _co nf ig= 1 cou ntr y=IE net work= { ssid= \"Network 1\" psk= \"PASSWORD\" priori t y= 1 } net work= { ssid= \"Network 2\" psk= \"PASSWORD\" priori t y= 2 } See this guide on headless setup from the Raspberry Pi website for more information. Ansible Setup Coming soon! Manual Setup Basic Raspberry Pi Setup SSH into the Raspberry Pi. Depending on your network it may be accessible over the raspberrrypi.local hostname. If not, check the DHCP leases on the router for the IP address or scan the network using a scanning tool such as nmap . ssh pi@raspberrypi.local Default Password The default password for the pi user in Raspberry Pi OS is raspberry . Update the default password: passwd pi Update the software on the Raspberry Pi to the latest version. sudo apt update sudo apt upgrade If you need to change any basic settings (hostname, Wi-Fi, language, etc.), this can be done using raspi-config : sudo raspi-config You may need to reboot at this point. sudo reboot now Download the Code Info This is a temporary solution, the final instructions will have an easier installation method. Clone the code from GitHub using git: git clone https://github.com/DylanGore-FYP/Car.git Or, download and extract this zip file. Install pipenv This project uses pipenv to manage dependencies. To install it, run: pip3 install pipenv On Debian-based systems, pipenv can also be installed using apt : apt install pipenv Once pipenv is installed, cd into the downloaded code and run: pipenv install This will install all of the required dependencies in a virtual environment. To access the virtual environment, run: pipenv shell Note: All instructions after this point assume you are running within the virtual environment unless stated otherwise Configuration All configuration is done within a config.toml file. A sample file comes with the repo. Copy it and rename it to use it as a starting point. cp config.sample.toml config.toml","title":"Vehicle"},{"location":"setup/vehicle/#vehicle","text":"Warning This section of the documentation is incomplete! Results may vary.","title":"Vehicle"},{"location":"setup/vehicle/#requirements","text":"Raspberry Pi Micro SD Card OBD-II Adapter LCD Display (Optional) GPS Adapter/HAT","title":"Requirements"},{"location":"setup/vehicle/#preparing-the-raspberry-pi","text":"","title":"Preparing the Raspberry Pi"},{"location":"setup/vehicle/#install-the-operating-system","text":"Flash an SD Card with the latest version of Raspberry Pi OS. The recommended way to do this is to use the Raspberry Pi Imager but something like balenaEtcher can be used if preferred. This guide assumes that that standard version of Raspberry Pi OS is being used (the one with the desktop environment) but feel free to use Raspberry Pi OS Lite if no display is needed.","title":"Install the Operating System"},{"location":"setup/vehicle/#configure-headless-operation","text":"This step is optional if using a display but makes things a bit easier to configure later. Plug the SD card into the computer and open the boot partition. Add a file called ssh (with no file extension) to enable the SSH server. Add a file called wpa_supplicant.conf to pre-configure your Wi-Fi network(s). Below is a sample file that has two networks with a different priority, if only one network is needed, remove the second network block. Don't forget to update the country with the ISO 3166-1 two letter country code for your location. c trl _i nterfa ce=DIR=/var/ru n /wpa_supplica nt GROUP= net dev upda te _co nf ig= 1 cou ntr y=IE net work= { ssid= \"Network 1\" psk= \"PASSWORD\" priori t y= 1 } net work= { ssid= \"Network 2\" psk= \"PASSWORD\" priori t y= 2 } See this guide on headless setup from the Raspberry Pi website for more information.","title":"Configure Headless Operation"},{"location":"setup/vehicle/#ansible-setup","text":"Coming soon!","title":"Ansible Setup"},{"location":"setup/vehicle/#manual-setup","text":"","title":"Manual Setup"},{"location":"setup/vehicle/#basic-raspberry-pi-setup","text":"SSH into the Raspberry Pi. Depending on your network it may be accessible over the raspberrrypi.local hostname. If not, check the DHCP leases on the router for the IP address or scan the network using a scanning tool such as nmap . ssh pi@raspberrypi.local Default Password The default password for the pi user in Raspberry Pi OS is raspberry . Update the default password: passwd pi Update the software on the Raspberry Pi to the latest version. sudo apt update sudo apt upgrade If you need to change any basic settings (hostname, Wi-Fi, language, etc.), this can be done using raspi-config : sudo raspi-config You may need to reboot at this point. sudo reboot now","title":"Basic Raspberry Pi Setup"},{"location":"setup/vehicle/#download-the-code","text":"Info This is a temporary solution, the final instructions will have an easier installation method. Clone the code from GitHub using git: git clone https://github.com/DylanGore-FYP/Car.git Or, download and extract this zip file.","title":"Download the Code"},{"location":"setup/vehicle/#install-pipenv","text":"This project uses pipenv to manage dependencies. To install it, run: pip3 install pipenv On Debian-based systems, pipenv can also be installed using apt : apt install pipenv Once pipenv is installed, cd into the downloaded code and run: pipenv install This will install all of the required dependencies in a virtual environment. To access the virtual environment, run: pipenv shell Note: All instructions after this point assume you are running within the virtual environment unless stated otherwise","title":"Install pipenv"},{"location":"setup/vehicle/#configuration","text":"All configuration is done within a config.toml file. A sample file comes with the repo. Copy it and rename it to use it as a starting point. cp config.sample.toml config.toml","title":"Configuration"}]}